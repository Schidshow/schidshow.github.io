{"version":3,"sources":["data.js","detail.js","programlist.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content1","content2","imglink","link","price","content","styled","div","h4","props","색상","재고파악","재고","Details","history","useHistory","useParams","useState","품절버튼스위치","품절버튼스위치변경","인풋저장변경","useEffect","타이머","setTimeout","clearTimeout","순수ID","_data","find","상품","className","onChange","e","target","value","src","width","onClick","재고변경","push","Programlistform","Card","style","Img","variant","_id","Body","Title","Text","Button","App","Data","data","data변경","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","to","NavDropdown","Item","Divider","exact","path","Jumbotron","map","a","i","axios","get","then","result","console","log","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d0c5e48.chunk.js","sourcesContent":["export default [\r\n    {\r\n      id : 0,\r\n      title : \"국립과학 3관\",\r\n      content1 : \"2021 3.5 ~ 2021 3.17\",\r\n      content2 : \"초등학교 3학년 ~ 6학년\",      \r\n      imglink : \"https://www.csc.go.kr/new1/img/KAR02876.jpg\",\r\n      link : \"https://www.csc.go.kr/new1/centers/exhibitinfo_2.jsp\",\r\n      price : 3000\r\n    },\r\n  \r\n    {\r\n      id : 1,\r\n      title : \"회전 운동\",\r\n      content : \"2021 4.15 ~ 2021 5.11\",\r\n      content2 : \"중학생\",            \r\n      imglink : \"https://www.csc.go.kr/new1/img/KAR02921.jpg\",\r\n      link : \"https://www.csc.go.kr/new1/centers/exhibitinfo_12.jsp\",\r\n      price : 5000\r\n    },\r\n  \r\n    {\r\n      id : 2,\r\n      title : \"중력의 법칙\",\r\n      content1 : \"2021 3.5 ~ 2021 3.17\",\r\n      content2 : \"고등학교 1학년 ~ 3학년\",            \r\n      imglink : \"https://www.csc.go.kr/new1/img/KAR02900.jpg\",\r\n      link : \"https://www.csc.go.kr/new1/centers/exhibitinfo_20.jsp\",\r\n      price : 1000\r\n    }\r\n\r\n] ","import React, {useState, useEffect} from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport './Detail.scss';\r\n\r\n//이렇게 css도 컨테이너화 해서 사용할 수 있다.\r\nlet 박스 = styled.div`\r\n  padding : 20px;\r\n  color : red;\r\n`\r\nlet 제목스타일 = styled.h4`\r\n  font-size : 25px;\r\n  color : ${props => props.색상};\r\n`\r\n\r\nfunction Details(props) {\r\n\r\n  \r\n    let history = useHistory();\r\n    let {id} = useParams();\r\n    let [품절버튼스위치,품절버튼스위치변경] = useState (true);\r\n    let [인풋저장,인풋저장변경] = useState('');\r\n\r\n\r\n    useEffect(()=>{\r\n      \r\n      let 타이머 = setTimeout(()=>{\r\n        품절버튼스위치변경(false)\r\n      }, 2000)\r\n      return () => {clearTimeout(타이머)}\r\n    },[품절버튼스위치])\r\n\r\n    //컴포넌트 등장 / 컴포넌트 업데이트가 될 때마다 이게 계속 실행되기 때문에 원치 않은 상황이 발생할 수 있음, 따라서 변수에 저장해놓고 상황에 따라 지워줘야 함\r\n    //대괄호 뒤에 특정 스테이트를 넣으면 해당 스테이트가 업데이트 될 때만 실행됨.. 콤마로 여러 개 가능;\r\n    //대괄호만 열고 닫으면 아무것도 없는 스테이트가 변경될 때만 업데이트 되기 때문에 첫 시작 빼고는 호출이 영영안됨, 첫 시작때만 쓰고 싶을 때 사용하는 꼼수\r\n    //리턴에다가 넣으면 컴포넌트가 사라질 때 코드를 실행하게 된다.\r\n    //위에처럼 clearTimeout함수를 이용하면 끝날때 타이머를 제거할 수 있다.\r\n\r\n\r\n    let 순수ID = props._data.find(function (상품) {\r\n      return 상품.id == id\r\n      \r\n    })\r\n      \r\n    \r\n    return(\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {/* <제목스타일 색상=\"green\">\r\n            asdfasdf\r\n          </제목스타일>\r\n          <박스>\r\n            <h4>dasasd</h4>\r\n          </박스> */}\r\n          {\r\n            품절버튼스위치 === true\r\n            ? <div className=\"empty-alert2\">품절 임박!</div>\r\n            : null\r\n          }\r\n          <input onChange={(e)=>{인풋저장변경(e.target.value)}}>\r\n          </input>\r\n\r\n          <div className=\"col-md-6\">\r\n            <img src={순수ID.imglink} width=\"100%\" />\r\n          </div>\r\n          <div className=\"col-md-6 mt-4\">\r\n            <h4 className=\"pt-5\">{순수ID.title}</h4>\r\n               {순수ID.content1}<br/>\r\n               {순수ID.content2}<br/>\r\n\r\n              <재고파악 재고={props.재고} ></재고파악>\r\n\r\n            <button className=\"btn btn-danger\" onClick={()=>{ \r\n              props.재고변경([9,10,11])\r\n              //하위 컴퍼넌트에서도 상위 컨퍼넌트의 스테이트를 가져와서 변경할 수 있다~ \r\n             }}>주문하기</button> \r\n            <button className=\"btn btn-danger\" onClick={()=>{\r\n                //history.goBack();\r\n                history.push('/');\r\n            }}>뒤로가기</button> \r\n          </div>\r\n        </div>\r\n    </div> \r\n    )\r\n    \r\n  }\r\n\r\n  function 재고파악 (props) {\r\n    return (\r\n    <p>재고 : {props.재고[0]} </p>\r\n    )\r\n  }\r\n\r\n  export default Details","import { Navbar, Nav, NavDropdown, Button, Jumbotron, Card } from 'react-bootstrap';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\n\r\nfunction Programlistform(props) {\r\n\r\n    let history = useHistory();\r\n    let {id} = useParams();\r\n    \r\n    return(\r\n        \r\n        <div className=\"col-md-4\">\r\n            <Card style={{ width: '100%' }}>\r\n                <Card.Img variant=\"top\" src={props._data[props._id].imglink} />\r\n                <Card.Body>\r\n                <Card.Title>{props._data[props._id].title}</Card.Title>\r\n                <Card.Text>\r\n                    {props._data[props._id].content}<br/>\r\n                    {props._data[props._id].content2}<br/>\r\n                </Card.Text>\r\n                {/* <Button variant=\"primary\" a href={props._data[props._id].link}>Go to Page!</Button> */}\r\n                <Button variant=\"primary\" onClick={()=>{\r\n                    history.push('/detail/0');\r\n                }} >Go to Page!</Button>\r\n                </Card.Body>\r\n            </Card>                         \r\n        </div>\r\n    )\r\n    \r\n  }\r\n\r\n\r\n\r\nexport default Programlistform","import React, { useState } from 'react';\nimport './App.css';\nimport { Navbar, Nav, NavDropdown, Button, Jumbotron, Card } from 'react-bootstrap';\nimport Data from './data.js';\nimport Details from './detail.js';\nimport Programlistform from './programlist.js';\nimport { Link, Route, Switch } from 'react-router-dom'\nimport axios from 'axios';\n\n\nfunction App() {\n\n  let [data, data변경] = useState (Data);\n  let [재고, 재고변경] = useState ([10,11,12]);\n  //중요한 데이터들은 모두 app.js에 만들자!! 상위 컴포넌트에서 하위로 흐르는 것이 좋다.\n  \n    return (\n    <div className=\"App\">\n      \n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">어서오세요</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n            <Nav.Link as={Link} to=\"/detail\">Detail</Nav.Link>\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n\n        </Navbar.Collapse>\n      </Navbar>\n\n\n      <Switch>\n\n        <Route exact path=\"/\">\n          <Jumbotron className=\"background\">\n            <h1>뚝딱 쇼핑</h1>\n            <p>\n              우리동네 체험 학습<br/>\n              귀찮게 찾지 말고<br/>\n              여기서 뚝딱 해결하세요.<br/>\n            </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>       \n\n          <div className=\"container\">\n          <div className=\"row\">\n            {\n              data.map((a, i) => {\n                return (\n                  <Programlistform _data = {data}  _id = {i} key = {i} ></Programlistform>\n                )           \n              })\n            }  \n            <button className=\"btn btn-primary\" onClick={()=>{\n\n              //axios.post('서버URL', {id: '어쩌구요', pw: 2341 });\n              //post를 이용해서 서버로 데이터 보내는 법\n              axios.get('https://codingapple1.github.io/shop/data2.json')\n              //get을 이용해서 서버에서 데이터 받는 법.. \n              .then((result)=>{\n                console.log(result)\n                data변경( [...data, ...result.data] )\n                //ajax로 가져온 데이터를 기존 스테이트에 집어 넣는 방법\n                //여기서는 꼼수로 구현함\n                //...을 이용하면 {}를 벗겨낼 수 있음, 그래서 기존 데이터와 ajax로 받아온 데이터(result.data)의 {}를 벗기고 []로 다시 감싸서 값을 다시 집어넣었음\n              })\n              .catch(()=>{\n                console.log('실패했음')\n              })\n              //.then은 요청이 성공했을 때 사용할 코드\n              //.catch는 요청이 실패했을 때 사용할 코드\n              //result라는 변수를 만들어서 이 안에다가 받아온 정보를 담아 올 수 있다.\n              //json으로 받아오면 오브젝트가 아니라 json자료형으로 가져오는데 axios를 활용하면 바로 오브젝트로 변환되어 쉽게 활용할 수 있다. 그래서 쓰는거..\n\n            }}>더 보기</button>         \n          </div>\n        </div>\n      \n\n        </Route>\n        \n\n        <Route path=\"/detail/:id\">\n          <Details _data = {data} 재고={재고} 재고변경={재고변경}></Details>\n          {/* 두 단계 하위로 스테이트 넘기기 위한 원시적인 방법 : 재고 데이터 넘겨줌 시작! */}\n        </Route>\n        \n\n        <Route path=\"/:id\">\n            <div>아무거나 적었을 때 이거 보여줘라~</div>\n        </Route>\n\n      </Switch>\n\n    </div>\n  );\n\n\n}\n\n\nexport default App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}